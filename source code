import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

movies_data = pd.read_csv('movies.csv')

vectorizer = TfidfVectorizer(stop_words='english')
tfidf_matrix = vectorizer.fit_transform(movies_data['genres'].fillna(''))
cosine_sim_matrix = cosine_similarity(tfidf_matrix, tfidf_matrix)

def get_similar_movies(movie_title, cosine_sim_matrix, movies_data, top_n=5):
    movie_index = movies_data[movies_data['title'] == movie_title].index[0]
    movie_scores = list(enumerate(cosine_sim_matrix[movie_index]))
    movie_scores = sorted(movie_scores, key=lambda x: x[1], reverse=True)
    top_movies = [movies_data.iloc[score[0]]['title'] for score in movie_scores[1:top_n+1]]
    return top_movies

def recommend_movies(movie_title):
    similar_movies = get_similar_movies(movie_title, cosine_sim_matrix, movies_data)
    print(f"Recommended movies for '{movie_title}':")
    for movie in similar_movies:
        print(movie)

recommend_movies('The Dark Knight')
